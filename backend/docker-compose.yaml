services:
  app:
    build:
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    working_dir: /www
    volumes:
      - ./:/www
      - ./.config-docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - laravel_network
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/www
      - ./.config-docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - laravel_network
    depends_on:
      - app

  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-avokajo}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_USER: ${DB_USERNAME:-laravel}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - laravel_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: ghcr.io/shyim/adminerevo:latest
    restart: always
    ports:
      - 8888:8080
    environment:
      ADMINER_DEFAULT_DRIVER: mysql
      ADMINER_DEFAULT_SERVER: db
      ADMINER_DEFAULT_USER: ${DB_USERNAME:-laravel}
      ADMINER_DEFAULT_PASSWORD: ${DB_PASSWORD:-password}
    depends_on:
      db:
        condition: service_healthy
    networks:
     - laravel_network

networks:
  laravel_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
